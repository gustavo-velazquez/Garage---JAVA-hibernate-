package modelo;
// Generated 16/06/2020 17:55:22 by Hibernate Tools 4.3.1


import java.sql.Time;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 * Registro generated by hbm2java
 */
public class Registro  implements java.io.Serializable {


     private Integer idregistro;
     private Empleado empleado;
     private Vehiculo vehiculo;
     private Date horaEntrada;
     private double tarifaTotal;
     
     ArrayList<String> empleados ;

    public Registro() {
    }

    public Registro(Empleado empleado, Vehiculo vehiculo, Time horaEntrada, double tarifaTotal) {
       this.empleado = empleado;
       this.vehiculo = vehiculo;
       this.horaEntrada = horaEntrada;
       this.tarifaTotal = tarifaTotal;
    }
   
    public Integer getIdregistro() {
        return this.idregistro;
    }
    
    public void setIdregistro(Integer idregistro) {
        this.idregistro = idregistro;
    }
    public Empleado getEmpleado() {
        return this.empleado;
    }
    
    public void setEmpleado(Empleado empleado) {
        this.empleado = empleado;
    }
    public Vehiculo getVehiculo() {
        return this.vehiculo;
    }
    
    public void setVehiculo(Vehiculo vehiculo) {
        this.vehiculo = vehiculo;
    }
    public Date getHoraEntrada() {
        return this.horaEntrada;
    }
    
    public void setHoraEntrada(Date horaEntrada) {
        this.horaEntrada = horaEntrada;
    }
    public double getTarifaTotal() {
        return this.tarifaTotal;
    }
    
    public void setTarifaTotal(double tarifaTotal) {
        this.tarifaTotal = tarifaTotal;
    }
    
    public void calcularTotal(int idv){
        
        double horas;
        long mili=0;
        ArrayList<Date> lista = new ArrayList<Date>();     
        lista=(ArrayList<Date>) this.ultimaentrada(idv);//ultimo registro con ese id
  
        for(Date r:lista){
            System.out.println("entro");
            System.out.println(r.getTime());
            mili=r.getTime();
            //System.out.println(mili/3600000);//horas
        }
        Calendar cal= Calendar.getInstance();
        Date actual= cal.getTime();//llamo la hora actual
        System.out.println("hora actual: "+actual.getTime());
        System.out.println("hora vieja: "+mili);
        
        mili=actual.getTime()-mili;//resto hora de entrada y hora actual  
        System.out.println("hora restada: "+mili);
        horas=(double)mili/3600000;//divido por 36000000 equivalente a una hora en milisegundos
        
     
        System.out.println(horas);
        this.tarifaTotal=horas*this.vehiculo.getPrecioHora();//seteo la tarifa de acuerdo a las horas y el precio x hora
        this.tarifaTotal=(Math.round(this.tarifaTotal * 100))/100d; //redondeo a 2 decimales    
        System.out.println(tarifaTotal);
        System.out.println(vehiculo.getPrecioHora());
    }
    
       public Object ultimaentrada(int id){
           String q="Select max(horaEntrada) From Registro WHERE IDVehiculo = "+id;
           SessionFactory instancia = NewHibernateUtil.getSessionFactory();
           Session sesion = instancia.openSession();
        
        Transaction tx = sesion.beginTransaction();
        Query sql = sesion.createQuery(q);
        List<Object> lista = sql.list();
        tx.commit();
        sesion.close();     
        return lista;
           
       }

    public void alta(Object nombre){
        SessionFactory instancia = NewHibernateUtil.getSessionFactory();
        Session sesion = instancia.openSession();
        
        Transaction tx = sesion.beginTransaction();
        sesion.save(nombre);
        tx.commit();
        sesion.close();
        //JOptionPane.showMessageDialog(null, "Agregado Correctamente");
    }

    public void actualizar(Object nombre){
        SessionFactory instancia = NewHibernateUtil.getSessionFactory();
        Session sesion = instancia.openSession();
        
        Transaction tx = sesion.beginTransaction();
        sesion.update(nombre);
        tx.commit();
        sesion.close();
       // JOptionPane.showMessageDialog(null, "Agregado Correctamente");
       
    }
    
    
    public Object consultar(String q){
        
        SessionFactory instancia = NewHibernateUtil.getSessionFactory();
        Session sesion = instancia.openSession();
        
        Transaction tx = sesion.beginTransaction();
        Query sql = sesion.createQuery(q);
        List<Object> lista = sql.list();
        
        tx.commit();
        sesion.close();     
        return lista;
    }
 
    
    
     public void eliminar(Session sesion,SessionFactory instancia,Object a){
  
        Transaction tx = sesion.beginTransaction();
        sesion.delete(a);
        tx.commit();
        sesion.close();     
        JOptionPane.showMessageDialog(null, "El registro se elimino correctamente");
    }
     
     

  
}




